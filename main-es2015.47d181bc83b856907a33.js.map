{"version":3,"sources":["webpack:///x:/Packages/ngx-ssr-exclude/dist/ngx-ssr-exclude/__ivy_ngcc__/fesm2015/ngx-ssr-exclude.js","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SSRExcludeDirective","viewContainer","templateRef","platformId","this","clear","createEmbeddedView","ɵfac","t","ɵdir","type","selectors","SSRExcludeModule","ɵmod","ɵinj","factory","imports","AppComponent","AppModule","withServerTransition","appId","document","addEventListener","bootstrapModule","catch","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"6LAKA,IAAIA,EAAsB,MACtB,YAAYC,EAAeC,EAAaC,GACpCC,KAAKH,cAAgBA,EACrBG,KAAKF,YAAcA,EACnBE,KAAKD,WAAaA,EAEtB,WACQ,YAAiBC,KAAKD,YACtBC,KAAKH,cAAcI,QAGnBD,KAAKH,cAAcK,mBAAmBF,KAAKF,e,OAIvDF,EAAoBO,UAAO,SAAqCC,GAAK,OAAO,IAAKA,GAAKR,GAAqB,KAAyB,KAA0B,KAAyB,KAAqB,KAAyB,OACrOA,EAAoBS,UAAO,KAAyB,CAAEC,KAAMV,EAAqBW,UAAW,CAAC,CAAC,GAAI,aAAc,O,cAShH,IAAIC,EAAmB,Q,OAEvBA,EAAiBC,UAAO,KAAwB,CAAEH,KAAME,IACxDA,EAAiBE,UAAO,KAAwB,CAAEC,QAAS,SAAkCP,GAAK,OAAO,IAAKA,GAAKI,IAAwBI,QAAS,CAAC,CAAC,Q,4BCOtJ,QACE,YACE,4IAEF,OACA,iBACA,YAAG,kDAAuC,OAC5C,QCxCO,Y,MAAMC,G,6CAAAA,I,uBAAAA,EAAY,27BDPzB,aAAI,sBAAW,OACf,gBACE,cAGE,gBAIF,OACA,cACE,gBAIF,OACA,cACE,gBAIF,OACA,cACE,iBAIF,OACA,eAGE,iBACF,OACF,OAEA,aACE,gGAEF,OAEA,mC,iOCjCO,GCQA,Q,MAAMC,G,8BAAAA,EAAS,WAFR,K,oDAEDA,IAAS,UAHT,GAAE,SAJJ,CACP,IAAcC,qBAAqB,CAAEC,MAAO,cAC5C,M,GAKG,GCRL,cAGFC,SAASC,iBAAiB,mBAAoB,KAC5C,MAAyBC,gBAAgB,GACxCC,MAAMC,GAAOC,QAAQC,MAAMF,O,mBCZ9B,SAASG,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAKA,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,S","file":"x","sourcesContent":["import { __decorate, __param } from 'tslib';\nimport { ViewContainerRef, TemplateRef, Inject, PLATFORM_ID, Directive, NgModule } from '@angular/core';\nimport { isPlatformServer, CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nlet SSRExcludeDirective = class SSRExcludeDirective {\r\n    constructor(viewContainer, templateRef, platformId) {\r\n        this.viewContainer = viewContainer;\r\n        this.templateRef = templateRef;\r\n        this.platformId = platformId;\r\n    }\r\n    ngOnInit() {\r\n        if (isPlatformServer(this.platformId)) {\r\n            this.viewContainer.clear();\r\n        }\r\n        else {\r\n            this.viewContainer.createEmbeddedView(this.templateRef);\r\n        }\r\n    }\r\n};\nSSRExcludeDirective.ɵfac = function SSRExcludeDirective_Factory(t) { return new (t || SSRExcludeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nSSRExcludeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SSRExcludeDirective, selectors: [[\"\", \"ssrExclude\", \"\"]] });\r\nSSRExcludeDirective.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef },\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\nSSRExcludeDirective = __decorate([ __param(2, Inject(PLATFORM_ID))\r\n], SSRExcludeDirective);\n\nlet SSRExcludeModule = class SSRExcludeModule {\r\n};\nSSRExcludeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SSRExcludeModule });\nSSRExcludeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SSRExcludeModule_Factory(t) { return new (t || SSRExcludeModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SSRExcludeDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ssrExclude]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SSRExcludeModule, { declarations: function () { return [SSRExcludeDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SSRExcludeDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SSRExcludeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [SSRExcludeDirective],\n                exports: [SSRExcludeDirective]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of ngx-ssr-exclude\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { SSRExcludeModule, SSRExcludeDirective as ɵa };\n\n//# sourceMappingURL=ngx-ssr-exclude.js.map","<h1>SSR Exclude</h1>\r\n<div class=\"shields\">\r\n  <a\r\n    href=\"https://github.com/SachinShekhar/ngx-ssr-exclude/actions?query=workflow%3ABuild\"\r\n  >\r\n    <img\r\n      src=\"https://github.com/SachinShekhar/ngx-ssr-exclude/workflows/Build/badge.svg\"\r\n      alt=\"Build\"\r\n    />\r\n  </a>\r\n  <a href=\"https://github.com/SachinShekhar/ngx-ssr-exclude\">\r\n    <img\r\n      alt=\"GitHub last commit\"\r\n      src=\"https://img.shields.io/github/last-commit/SachinShekhar/ngx-ssr-exclude?logo=github\"\r\n    />\r\n  </a>\r\n  <a href=\"https://www.npmjs.com/package/ngx-ssr-exclude\">\r\n    <img\r\n      alt=\"npm (tag)\"\r\n      src=\"https://img.shields.io/npm/v/ngx-ssr-exclude/latest?logo=npm\"\r\n    />\r\n  </a>\r\n  <a href=\"https://www.npmjs.com/package/ngx-ssr-exclude\">\r\n    <img\r\n      alt=\"npm bundle size\"\r\n      src=\"https://img.shields.io/bundlephobia/minzip/ngx-ssr-exclude?label=npm%20-%20minzipped&logo=npm\"\r\n    />\r\n  </a>\r\n  <a\r\n    href=\"https://github.com/SachinShekhar/ngx-ssr-exclude/blob/master/LICENSE\"\r\n  >\r\n    <img alt=\"NPM License\" src=\"https://img.shields.io/npm/l/ngx-ssr-exclude\" />\r\n  </a>\r\n</div>\r\n\r\n<p>\r\n  This line is rendered on the server. Everything below is rendered in the\r\n  browser.\r\n</p>\r\n\r\n<ng-container *ssrExclude>\r\n  <p>\r\n    If you can't perceive the difference, disable the cache and throttle the\r\n    speed to 2G or Slow 3G using your browser's dev tools.\r\n  </p>\r\n  <img src=\"./assets/chrome-throttle-speed.png\" />\r\n  <p>You can also try performance profiling.</p>\r\n</ng-container>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { SSRExcludeModule } from 'ngx-ssr-exclude';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    SSRExcludeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}