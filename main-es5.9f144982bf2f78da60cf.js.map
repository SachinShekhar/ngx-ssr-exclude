{"version":3,"sources":["webpack:///x:/Packages/ngx-ssr-exclude/dist/ngx-ssr-exclude/__ivy_ngcc__/fesm2015/ngx-ssr-exclude.js","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SSRExcludeModule","BrowserExcludeDirective","SSRExcludeDirective","viewContainer","templateRef","platformId","this","clear","createEmbeddedView","ɵfac","t","ɵdir","type","selectors","ɵmod","ɵinj","factory","imports","AppComponent","AppModule","withServerTransition","appId","document","addEventListener","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"mhBAuDIA,EAzBAC,EAzBAC,E,wCAAAA,EAAmBA,WACnB,WAAYC,EAAeC,EAAaC,GAAWA,wBAC/CC,KAAKH,cAAgBA,EACrBG,KAAKF,YAAcA,EACnBE,KAAKD,WAAaA,EAJHH,wDAOX,YAAiBI,KAAKD,YACtBC,KAAKH,cAAcI,QAGnBD,KAAKH,cAAcK,mBAAmBF,KAAKF,iBAXhCF,MAeHO,UAAO,SAAqCC,GAAK,OAAO,IAAKA,GAAKR,GAAqB,KAAyB,KAA0B,KAAyB,KAAqB,KAAyB,OACrOA,EAAoBS,UAAO,KAAyB,CAAEC,KAAMV,EAAqBW,UAAW,CAAC,CAAC,GAAI,aAAc,O,OAS5GZ,EAAuBA,WACvB,WAAYE,EAAeC,EAAaC,GAAWA,wBAC/CC,KAAKH,cAAgBA,EACrBG,KAAKF,YAAcA,EACnBE,KAAKD,WAAaA,EAJCJ,wDAOf,YAAkBK,KAAKD,YACvBC,KAAKH,cAAcI,QAGnBD,KAAKH,cAAcK,mBAAmBF,KAAKF,iBAX5BH,MAeHQ,UAAO,SAAyCC,GAAK,OAAO,IAAKA,GAAKT,GAAyB,KAAyB,KAA0B,KAAyB,KAAqB,KAAyB,OACjPA,EAAwBU,UAAO,KAAyB,CAAEC,KAAMX,EAAyBY,UAAW,CAAC,CAAC,GAAI,iBAAkB,O,OASxHb,EAAgBA,uCAEHc,UAAO,KAAwB,CAAEF,KAAMZ,IACxDA,EAAiBe,UAAO,KAAwB,CAAEC,QAAS,SAAkCN,GAAK,OAAO,IAAKA,GAAKV,IAAwBiB,QAAS,CAAC,CAAC,Q,qCCvBtJ,mBACE,yBACE,+BACF,OACA,4BACE,oFACF,OACA,2BACE,uLAGF,OACF,Q,sBAEA,mBACE,yBACE,gCACF,OACA,4BACE,2EACF,OACA,2BACE,sLAGF,OACF,QCtDO,IAAMC,ECYAC,EDZN,IAAMD,EAAN,uC,oCAAMA,I,uBAAAA,EAAY,8jCDPzB,aAAI,sBAAW,OACf,gBACE,cAGE,gBAIF,OACA,cACE,gBAIF,OACA,cACE,gBAIF,OACA,cACE,iBAIF,OACA,eAGE,iBACF,OACF,OAEA,6BAcA,6BAcA,aACE,kBAAQ,sCAA0B,OAAU,sVAK5C,gBAIG,+BAAmB,OACrB,eACH,OACA,kBACA,aAAG,mDAAuC,S,+UE1DnC,IAAMC,EAAN,uC,qBAAMA,EAAS,WAFR,K,oDAEDA,IAAS,UAHT,GAAE,SANJ,CACP,IAAcC,qBAAqB,CAAEC,MAAO,cAC5C,EACA,IACA,Q,GCPF,cAGFC,SAASC,iBAAiB,oBAAoB,WAC5C,MAAyBC,gBAAgB,GAAzC,OACOC,YAAGA,OAAIC,QAAQC,MAAMF,U,mBCZ9B,SAASG,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,S","file":"x","sourcesContent":["import { __decorate, __param } from 'tslib';\nimport { ViewContainerRef, TemplateRef, Inject, PLATFORM_ID, Directive, NgModule } from '@angular/core';\nimport { isPlatformServer, isPlatformBrowser, CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nlet SSRExcludeDirective = class SSRExcludeDirective {\r\n    constructor(viewContainer, templateRef, platformId) {\r\n        this.viewContainer = viewContainer;\r\n        this.templateRef = templateRef;\r\n        this.platformId = platformId;\r\n    }\r\n    ngOnInit() {\r\n        if (isPlatformServer(this.platformId)) {\r\n            this.viewContainer.clear();\r\n        }\r\n        else {\r\n            this.viewContainer.createEmbeddedView(this.templateRef);\r\n        }\r\n    }\r\n};\nSSRExcludeDirective.ɵfac = function SSRExcludeDirective_Factory(t) { return new (t || SSRExcludeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nSSRExcludeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SSRExcludeDirective, selectors: [[\"\", \"ssrExclude\", \"\"]] });\r\nSSRExcludeDirective.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef },\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\nSSRExcludeDirective = __decorate([ __param(2, Inject(PLATFORM_ID))\r\n], SSRExcludeDirective);\n\nlet BrowserExcludeDirective = class BrowserExcludeDirective {\r\n    constructor(viewContainer, templateRef, platformId) {\r\n        this.viewContainer = viewContainer;\r\n        this.templateRef = templateRef;\r\n        this.platformId = platformId;\r\n    }\r\n    ngOnInit() {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.viewContainer.clear();\r\n        }\r\n        else {\r\n            this.viewContainer.createEmbeddedView(this.templateRef);\r\n        }\r\n    }\r\n};\nBrowserExcludeDirective.ɵfac = function BrowserExcludeDirective_Factory(t) { return new (t || BrowserExcludeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nBrowserExcludeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BrowserExcludeDirective, selectors: [[\"\", \"browserExclude\", \"\"]] });\r\nBrowserExcludeDirective.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef },\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\nBrowserExcludeDirective = __decorate([ __param(2, Inject(PLATFORM_ID))\r\n], BrowserExcludeDirective);\n\nlet SSRExcludeModule = class SSRExcludeModule {\r\n};\nSSRExcludeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SSRExcludeModule });\nSSRExcludeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SSRExcludeModule_Factory(t) { return new (t || SSRExcludeModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SSRExcludeDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ssrExclude]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserExcludeDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[browserExclude]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SSRExcludeModule, { declarations: function () { return [SSRExcludeDirective,\n        BrowserExcludeDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SSRExcludeDirective,\n        BrowserExcludeDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SSRExcludeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [SSRExcludeDirective, BrowserExcludeDirective],\n                exports: [SSRExcludeDirective, BrowserExcludeDirective]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of ngx-ssr-exclude\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { SSRExcludeModule, SSRExcludeDirective as ɵa, BrowserExcludeDirective as ɵb };\n\n//# sourceMappingURL=ngx-ssr-exclude.js.map","<h1>SSR Exclude</h1>\r\n<div class=\"shields\">\r\n  <a\r\n    href=\"https://github.com/SachinShekhar/ngx-ssr-exclude/actions?query=workflow%3ABuild\"\r\n  >\r\n    <img\r\n      src=\"https://github.com/SachinShekhar/ngx-ssr-exclude/workflows/Build/badge.svg\"\r\n      alt=\"Build\"\r\n    />\r\n  </a>\r\n  <a href=\"https://github.com/SachinShekhar/ngx-ssr-exclude\">\r\n    <img\r\n      alt=\"GitHub last commit\"\r\n      src=\"https://img.shields.io/github/last-commit/SachinShekhar/ngx-ssr-exclude?logo=github\"\r\n    />\r\n  </a>\r\n  <a href=\"https://www.npmjs.com/package/ngx-ssr-exclude\">\r\n    <img\r\n      alt=\"npm (tag)\"\r\n      src=\"https://img.shields.io/npm/v/ngx-ssr-exclude/latest?logo=npm\"\r\n    />\r\n  </a>\r\n  <a href=\"https://www.npmjs.com/package/ngx-ssr-exclude\">\r\n    <img\r\n      alt=\"npm bundle size\"\r\n      src=\"https://img.shields.io/bundlephobia/minzip/ngx-ssr-exclude?label=npm%20-%20minzipped&logo=npm\"\r\n    />\r\n  </a>\r\n  <a\r\n    href=\"https://github.com/SachinShekhar/ngx-ssr-exclude/blob/master/LICENSE\"\r\n  >\r\n    <img alt=\"NPM License\" src=\"https://img.shields.io/npm/l/ngx-ssr-exclude\" />\r\n  </a>\r\n</div>\r\n\r\n<mat-card *browserExclude>\r\n  <mat-card-title>\r\n    Rendered on Server\r\n  </mat-card-title>\r\n  <mat-card-subtitle>\r\n    This component is rendered on the server by Angular Universal runtime..\r\n  </mat-card-subtitle>\r\n  <mat-card-content>\r\n    This component is displayed to the users even before Angular runtime is\r\n    bootstrapped in the browser. The server renders it. This component uses\r\n    *browserExclude directive.\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card *ssrExclude>\r\n  <mat-card-title>\r\n    Rendered in Browser\r\n  </mat-card-title>\r\n  <mat-card-subtitle>\r\n    This component is rendered in the browser by Angular runtime..\r\n  </mat-card-subtitle>\r\n  <mat-card-content>\r\n    This component is displayed to the users after Angular runtime gets\r\n    bootstrapped in the browser. The server doesn't render it. This component\r\n    uses *ssrExclude directive.\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<p>\r\n  <strong>The above card case study:</strong> First, server rendered version of\r\n  the card component is displayed. And, when Angular runtime gets bootstrapped\r\n  in the browser, it is replaced with browser rendered version. If you can't\r\n  perceive it (because this demo is very small against your fast internet),\r\n  disable the cache and throttle the speed to 2G or Slow 3G using your\r\n  <a\r\n    href=\"https://developers.google.com/web/tools/chrome-devtools/network\"\r\n    target=\"_blank\"\r\n    rel=\"noopener\"\r\n    >browser's dev tools</a\r\n  >.\r\n</p>\r\n<img src=\"./assets/chrome-throttle-speed.png\" />\r\n<p>You can also try performance profiling.</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { SSRExcludeModule } from 'ngx-ssr-exclude';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    SSRExcludeModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}